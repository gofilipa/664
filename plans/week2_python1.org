* plan - Python day 1
** agenda
- review challenge from last week
- introduce Python programming language
- start challenge for this week

** introduction to the Python language
- What is Python?
  - powerful programming language for many tasks
  - "high level"
  - zen of python
- Learning objectives
  - types, variables, for holding data
  - functions, methods for working w data
  - complex structures: iteration and logic
  - python syntax

** python lessons
- opening challenge, which you will know by the end
  - critical approach to data. Nothing is neutral or objective.
  - "data capture and analysis practices often aim to reduce real-life
    objects and persons into computable elements"
- opening jupyter notebook or google colab
- data types
  - real world objects that are transformed into a computational
    format, to be computed.
  - type() function
  - int, str, bool, list
  - types as a constraint
- variables
  - how we save data, to work with it
  - using good names
  - PARTNERS: creating variables to find the limits
  - variables as objects
    - objects have methods, .upper()
  - methods vs functions
    - one like a subject, and one like a clause
  - string methods like split(), lower(), upper()
  - abstraction, saving our results to a new variable, then using
    type()
- lists
  - list indexing - accessing items by position
  - list slicing - grabbing sections of a list
    - inclusive, exclusive values
  - PARTNERS CHALLENGE: get the middle 3 items of a list
  - list methods
    - append(), remove(), pop()
    - sort(), reverse()
  - INDIVIDUAL: write a sentence and split it up into a list of words.
    Then do something to that list of words.
    - why does split not work on a list?
- individual practice: ERRORS
  - there are many kinds of errors you can make with python.
  - explore different kinds of errors. What are the general category
    of errors? What is a Name and a Type error, for instance? Syntax
    or Traceback? Try to get 2 of each.
    - choose 1 or 2 of your errors and google them. Read the stack
      overflow post about it. Try to get familiar with the forum
      format for asking coding questions.
- Challenge:
  - Grab a paragraph or two of text from a book on Project Gutenberg,
    and save that text to a string in a Python notebook. Then use the
    methods we learned in class to do the following: first, transform
    the string into a list; then, add, remove, and sort items in the
    list. Save your python notebook file (.ipynb file) and submit it
    on canvas.
    
