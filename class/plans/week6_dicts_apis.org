* the met API
goals:
- discuss the anatomy of an API request
- go over some useful methods for working with API data
- read over documentation for the MET API
- add some complexity with:
  - multiple requests
  - f-strings
  - looping
  - conditions
- saving data to a DataFrame, csv
** the MET API
- import requests
- anatomy of a request: root, path, parameter
  - also "base" and "endpoint"
- make the request
  - dir, type to examine
  - json to parse it
  - keys() to see the keys
** dicts
- what is a dict?
  - data structure
  - make one out of "students"
  - syntax for accessing items
- just like a dataframe
- look at our parsed object, the list of objectIDs
** reading docs
- what does the number mean? look at "Search" section on MET API docs.
- individual challenge: play around with some parameters besides q,
  and you can layer them with &
** objects endpoint
- that number corresponds to an object. let's make a new search to
  find it.
- write a new request using f-string, passing that into requests.get
- requests.get, then dir, then json
- save the variable to "first-json", then check some of the keys
** BREAK
** looping and conditions
- we are going to grab a bunch of these, create a dataset of works.
- get the IDs, make a list.
- write a loop that prints the first ten
- write a loop that requests the first ten
- more requests:
  - use loop and f strings to write requests for the first 10 items.
  - save to a new list called first 10.
  - must parse and get json before you add to the list.
- now, use loops and bracket syntax to examine some of the values
  - cannot access the none values
  - use if &/or item.get()
- now, do it for 100 items
  - check out the names, and the genders.
  - use f strings to print out both
  - notice anything interesting?
    - only the women have an actual gender. hmmmmm....
    - why is that?
- saving to DF, and some basic analysis
